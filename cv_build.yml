---

- name: "Apply custom modifications and build resumes (default formats: html, pdf)"
  gather_facts: false
  become: false
  hosts: localhost
  connection: local

  vars:
    css_style: ptn
    out_dir_path: ./out
    resumemake_image_tag: 3.1.1.0-ubuntu
    resumemake_image_force_build: false
    resumemake_image_entrypoint: '["sh","-c","cd /home/app/resume && make html && make pdf"]' # pdf target uses html resume as base, so you'll have to build it first

  pre_tasks:
    - name: "[INCLUDE] Include secret vars"
      ansible.builtin.include_vars: secrets.vault

    - name: Get current user from facts # To run image's entrypoint and have files created with appropriate ownership
      ansible.builtin.setup:
        filter:
          - ansible_user_id

    - name: Build custom configurations
      ansible.builtin.template:
        src: "./templates/{{ item }}.j2"
        dest: "./{{ item }}"
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_id }}"
        mode: "0644"
      loop:
        - "Makefile"
        - "Dockerfile"

  tasks:
    - name: Build resumes
      block:
        - name: "Build 'resumemake' image"
          community.docker.docker_image:
            name: "resumemake:{{ resumemake_image_tag }}"
            build:
              path: .
            source: build
            force_source: "{{ 'true' if resumemake_image_force_build|d('false')|bool else 'false' }}"

        - name: Get resumes list
          ansible.builtin.find:
            paths: ./resumes/
            patterns: "*.md"
          register: _resumes_list

        - name: Inject sensitive information
          ansible.builtin.replace:
            path: "{{ item.0.path }}"
            regexp: "{{ item.1.regex }}"
            replace: "{{ item.1.replace }}"
          with_nested:
            - "{{ _resumes_list.files }}"
            - "{{ patterns }}"
          vars:
            patterns:
              - {regex: '<email>', replace: '{{ cv_email }}'}
              - {regex: '<tel>', replace: '{{ cv_tel }}'}

        - name: "Run 'resumemake' container"
          community.docker.docker_container:
            name: resumemake
            image: "resumemake:{{ resumemake_image_tag }}"
            volumes:
              - .:/home/app/resume:ro
              - "{{ out_dir_path }}:/tmp:rw"
            state: started
            detach: false
            cleanup: true
          register: _container_output

        - name: "[INFO] Print container output"
          ansible.builtin.debug:
            var: _container_output.container.Output|d()

      always:
        - name: Restore sensitive information placeholder fields
          ansible.builtin.replace:
            path: "{{ item.0.path }}"
            regexp: "{{ item.1.regex }}"
            replace: "{{ item.1.replace }}"
          with_nested:
            - "{{ _resumes_list.files }}"
            - "{{ patterns }}"
          vars:
            patterns:
              - {regex: '{{ cv_email }}', replace: '<email>'}
              - {regex: '{{ cv_tel | replace("+","\+") }}', replace: '<tel>'}

        - name: Cleanup repo
          when: not ansible_check_mode|bool
          ansible.builtin.file:
            path: "./{{ item }}"
            state: absent
          loop:
            - "Makefile"
            - "Dockerfile"
